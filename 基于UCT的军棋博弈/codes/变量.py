from 全局变量辅助 import *
from numpy import *
from 概率表刷新 import *
import  logging
logging.basicConfig(level=logging.INFO)

#开局定量##########################################
#开局从裁判获取的参数  
val('先手') #己方？敌方？  
val('行棋限制时间') #int s
val('协议版本')     #int 
val('非进攻步限制') #int c

#动态变量##########################################
#通信元素   
val('输入消息')
val('输出消息')
#战术信息
val('敌方军旗位置','未知')
val('敌方司令编号','未知')
#编译常量#########################################   
val('队伍名称','DOEMsy')
棋子编码转化表 = {
    '司令':'a',
    '军长':'b',
    '师长':'c',
    '旅长':'d',
    '团长':'e',
    '营长':'f',
    '连长':'g',
    '排长':'h',
    '工兵':'i',
    '地雷':'j',
    '炸弹':'k',
    '军旗':'l'
}
val('棋子编码转化表',棋子编码转化表)
棋种最大数目表={
    '司令':1,
    '军长':1,
    '师长':2,
    '旅长':2,
    '团长':2,
    '营长':2,
    '连长':3,
    '排长':3,
    '工兵':3,
    '地雷':3,
    '炸弹':2,
    '军旗':1
}
val('棋种最大数目表',棋种最大数目表)
棋种可吃表 = {
    '司令':{'军长','师长','旅长','团长','营长','连长','排长','工兵','军旗'},
    '军长':{'师长','旅长','团长','营长','连长','排长','工兵','军旗'},
    '师长':{'旅长','团长','营长','连长','排长','工兵','军旗'},
    '旅长':{'团长','营长','连长','排长','工兵','军旗'},
    '团长':{'营长','连长','排长','工兵','军旗'},
    '营长':{'连长','排长','工兵','军旗'},
    '连长':{'排长','工兵','军旗'},
    '排长':{'工兵','军旗'},
    '工兵':{'地雷','军旗'},
    '地雷':{'司令','军长','师长','旅长','团长','营长','连长','排长'},
    '炸弹':{'军旗'},
    '军旗':{}
}
val('棋种可吃表',棋种可吃表)
棋种被吃表 = {
    '司令':{'地雷'},
    '军长':{'司令','地雷'},
    '师长':{'司令','军长','地雷'},
    '旅长':{'司令','军长','师长','地雷'},
    '团长':{'旅长','司令','军长','师长','地雷'},
    '营长':{'团长','旅长','司令','军长','师长','地雷'},
    '连长':{'营长','团长','旅长','司令','军长','师长','地雷'},
    '排长':{'连长','营长','团长','旅长','司令','军长','师长','地雷'},
    '工兵':{'排长','连长','营长','团长','旅长','司令','军长','师长'},
    '地雷':{'工兵'},
    '炸弹':{'地雷'},
    '军旗':{'排长','连长','营长','团长','旅长','司令','军长','师长'}
}
val('棋种被吃表',棋种被吃表)
val('棋种表',{'司令','军长','师长','旅长','团长','营长','连长','排长','工兵','军旗','炸弹'})

#棋盘############################################
棋种概率表 = {
    '司令':{},
    '军长':{},
    '师长':{},
    '旅长':{},
    '团长':{},
    '营长':{},
    '连长':{},
    '排长':{},
    '工兵':{},
    '地雷':{},
    '炸弹':{},
    '军旗':{}
}
val('棋种概率表',棋种概率表)

class 棋子类(object):
    def __init__(self):
        self.概率 = {}  #用于抛针
        self.是啥 = ''  #已经确定或抛针得出
        self.位置 = []  #用于快速检索我方存活棋子

val('敌方棋子集合',{})#敌方全部棋子集合
val('己方棋子集合',{})#己方存活棋子集合


def 是己方棋子(chessID):
    if type(chessID) == str:
        return True
    elif type(chessID) == int:
        return False



class 棋盘类(object):

    def __init__(self):
        self.棋盘 = [       #0 无特殊点 #1 铁路 #2 行营 #3 大本营
            [0,3,0,3,0],
            [1,1,1,1,1],
            [1,2,1,2,1],
            [1,0,2,0,1],
            [1,2,0,2,1],
            [1,1,1,1,1],

            [1,1,1,1,1],
            [1,2,1,2,1],
            [1,0,2,0,1],
            [1,2,0,2,1],
            [1,1,1,1,1],
            [0,3,0,3,0]                   
        ]
        self.棋局 = [       #用于加载己方布局 对敌方棋子进行标记 #-1为空
            [0,1,2,3,4],    #0
            [10,11,12,13,14],
            [20,-1,22,-1,24],
            [30,31,-1,33,34],
            [40,-1,42,-1,44],
            [50,51,52,53,54], #5

            [1,1,1,1,1],    #6
            [1,2,1,2,1],
            [1,0,2,0,1],
            [1,2,0,2,1],
            [1,1,1,1,1],
            [0,3,0,3,0]     #11
        ]

    def 初始化(self,布局):     #初始化注入布局并标记棋子
        己方棋子集合 = {}
        敌方棋子集合 = {}
        self.棋局[6:12] = 布局
        i = 0
        for line in self.棋局:
            j = 0
            for chessID in line:
                if chessID != -1:
                    目标棋子 = 棋子类()
                    if 是己方棋子(chessID):
                        目标棋子.概率 = {chessID:1.0}
                        目标棋子.是啥 = chessID
                        目标棋子.位置 = [i,j]
                        己方棋子集合[chessID] = 目标棋子
                    else:
                        #待添加功能#初始化敌方棋子的概率表##
                        目标棋子.是啥 = '未知'
                        敌方棋子集合[chessID] = 目标棋子
                j+=1
            i+=1
        val('敌方棋子集合',敌方棋子集合)
        val('己方棋子集合',己方棋子集合)

       
    

    #函数负责移动棋子并更新棋子位置，再调用概率表刷新
    def 移动棋子(self,起点,终点,结果):  #起点[] 终点[] 结果=?{'移动','对死','吃掉','被吃'}
        敌方棋子集合 = val('敌方棋子集合')
        己方棋子集合 = val('己方棋子集合')
        
        bi = 起点[0];bj = 起点[1]
        ei = 终点[0];ej = 终点[1]
        chessID = self.棋局[bi][bj]
        goID = self.棋局[ei][ej]    #目标ID 不存在为-1
        
        移动方 = ''
        是己方棋 = 是己方棋子(chessID)#标记自己的棋子和对面的棋子
        if 是己方棋:
            己方ID = chessID
            敌人ID = goID
            移动方 = '己方'
        else:
            敌人ID = chessID
            己方ID = goID
            移动方 = '敌人'
        
        if 结果 == '移动':               #更新棋子位置   
            self.棋局[ei][ej] = chessID
            self.棋局[bi][bj] = -1        
        else:
            if 结果 == '对死':
                self.棋局[ei][ej] = -1
                self.棋局[bi][bj] = -1
            elif 结果 == '吃掉':
                self.棋局[ei][ej] = 己方ID
                self.棋局[bi][bj] = -1
            elif 结果 == '被吃':
                self.棋局[ei][ej] = 敌人ID
                self.棋局[bi][bj] = -1
        val('敌方棋子集合',敌方棋子集合)
        val('己方棋子集合',己方棋子集合)
        刷新概率表(起点,终点,结果,己方ID,敌人ID,移动方,self.棋盘)                      

    def display(self):
        i = 0
        for line in self.棋局:
            print(chr(65+i),end=' ')
           
            for chessID in line:
                if type(chessID) == int:
                    print(chessID,end='   ')
                else:
                    print(chessID,end=' ')
            print('')
            if i==5:
                print('-----------------------------')
            i+=1
            
                        

棋盘 = 棋盘类()
val('棋盘',棋盘)

#布局
布局一号 = [
        ['营长','连长','营长','连长','团长'],
        ['旅长',-1    ,'团长',-1    ,'连长'],
        ['师长','旅长',-1    ,'师长','工兵'],
        ['炸弹',-1    ,'炸弹',-1    ,'工兵'],
        ['军长','地雷','司令','排长','工兵'],
        ['地雷','军旗','地雷','排长','排长']
    ]
val('布局一号',布局一号)